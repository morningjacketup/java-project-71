<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="app"><sessioninfo id="DESKTOP-PQRPMOP-46eeabe6" start="1670687681163" dump="1670687684058"/><package name="hexlet/code/formatter"><class name="hexlet/code/formatter/Stylish" sourcefilename="Stylish.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="21" covered="56"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="5" covered="12"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="56"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/formatter/Plain" sourcefilename="Plain.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="28" covered="73"/><counter type="BRANCH" missed="3" covered="6"/><counter type="LINE" missed="11" covered="19"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preparingMap" desc="(Ljava/util/Map;)Ljava/util/Map;" line="52"><counter type="INSTRUCTION" missed="6" covered="58"/><counter type="BRANCH" missed="3" covered="9"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="131"/><counter type="BRANCH" missed="6" covered="15"/><counter type="LINE" missed="13" covered="31"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/formatter/Json" sourcefilename="Json.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="format" desc="(Ljava/util/Map;)Ljava/lang/String;" line="10"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Plain.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="10" mb="0" cb="2"/><line nr="17" mi="0" ci="11" mb="3" cb="2"/><line nr="19" mi="4" ci="0" mb="0" cb="0"/><line nr="20" mi="2" ci="0" mb="0" cb="0"/><line nr="21" mi="3" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="26" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="2"/><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="1" cb="3"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="1" cb="3"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="131"/><counter type="BRANCH" missed="6" covered="15"/><counter type="LINE" missed="13" covered="31"/><counter type="COMPLEXITY" missed="7" covered="8"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Stylish.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="8" mi="0" ci="11" mb="0" cb="2"/><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="10" mi="0" ci="10" mb="3" cb="2"/><line nr="12" mi="7" ci="0" mb="0" cb="0"/><line nr="13" mi="1" ci="0" mb="0" cb="0"/><line nr="15" mi="7" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="18" mi="0" ci="7" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="7" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="56"/><counter type="BRANCH" missed="3" covered="4"/><counter type="LINE" missed="6" covered="12"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Json.java"><line nr="8" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="4" mb="0" cb="0"/><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="64" covered="197"/><counter type="BRANCH" missed="9" covered="19"/><counter type="LINE" missed="20" covered="46"/><counter type="COMPLEXITY" missed="12" covered="12"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="3"/></package><package name="hexlet/code"><class name="hexlet/code/Differ" sourcefilename="Differ.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="generate" desc="(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" line="11"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="18"><counter type="INSTRUCTION" missed="12" covered="58"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="74"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser$1" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Parser" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="parse" desc="(Ljava/lang/String;)Ljava/util/Map;" line="19"><counter type="INSTRUCTION" missed="6" covered="38"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="jsonToMap" desc="(Ljava/lang/String;)Ljava/util/Map;" line="38"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yamlToMap" desc="(Ljava/lang/String;)Ljava/util/Map;" line="45"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="66"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/App" sourcefilename="App.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="call" desc="()Ljava/lang/Integer;" line="27"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="main" desc="([Ljava/lang/String;)V" line="33"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="hexlet/code/Parser$2" sourcefilename="Parser.java"><method name="&lt;init&gt;" desc="()V" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="hexlet/code/Formatter" sourcefilename="Formatter.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getFormat" desc="(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)Ljava/lang/String;" line="14"><counter type="INSTRUCTION" missed="5" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="App.java"><line nr="12" mi="2" ci="0" mb="0" cb="0"/><line nr="14" mi="4" ci="0" mb="0" cb="0"/><line nr="27" mi="8" ci="0" mb="0" cb="0"/><line nr="28" mi="3" ci="0" mb="0" cb="0"/><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="9" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Parser.java"><line nr="16" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="7" mb="0" cb="0"/><line nr="21" mi="0" ci="5" mb="1" cb="1"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="2"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="11" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="72"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="15"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Formatter.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="8" mb="1" cb="3"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="21"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Differ.java"><line nr="9" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="14" mi="0" ci="6" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="10" mb="0" cb="2"/><line nr="25" mi="0" ci="4" mb="1" cb="1"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="1" cb="1"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="0" ci="8" mb="0" cb="2"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="74"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="3" covered="16"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="64" covered="167"/><counter type="BRANCH" missed="4" covered="14"/><counter type="LINE" missed="15" covered="35"/><counter type="COMPLEXITY" missed="10" covered="14"/><counter type="METHOD" missed="6" covered="8"/><counter type="CLASS" missed="1" covered="5"/></package><counter type="INSTRUCTION" missed="128" covered="364"/><counter type="BRANCH" missed="13" covered="33"/><counter type="LINE" missed="35" covered="81"/><counter type="COMPLEXITY" missed="22" covered="26"/><counter type="METHOD" missed="9" covered="12"/><counter type="CLASS" missed="1" covered="8"/></report>